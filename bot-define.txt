my_telegram_bot/
│
├── bot/
│   ├── handlers/
│   │   ├── start.py
│   │   └── other.py
│   │
│   ├── services/
│   │   ├── ai_model/
│   │   │   ├── __init__.py
│   │   │   ├── model.py            # کد اصلی بارگذاری و استفاده از مدل جنمای
│   │   │   └── utils.py            # توابع کمکی برای پردازش متن یا پرامپت
│   │   │
│   │   ├── cache_service.py
│   │   ├── db_locks.py
│   │   ├── db_mysql.py
│   │   ├── db_service.py
│   │   ├── db_sqlite.py
│   │   └── telegram_api.py
│   │
│   ├── models/
│   │   └── user.py
│   │
│   ├── utils/
│   │   └── logger.py
│   │
│   └── main.py                    # نقطه شروع ربات
│
├── config/
│   ├── __init__.py
│   └── settings.py                # تنظیمات کلی، انتخاب دیتابیس و توکن‌ها
│
├── .env                          # توکن تلگرام، یوزر و پس دیتابیس، کلید API مدل جنمای
├── .env.example                  # نمونه بدون اطلاعات محرمانه
├── requirements.txt              # پکیج‌های مورد نیاز
├── README.md                     # راهنمای اجرا و توسعه
└── .gitignore




📜 توضیحات هر بخش

| پوشه / فایل                      | توضیح کامل                                                                                    |
| -------------------------------- | --------------------------------------------------------------------------------------------- |
| `bot/`                           | شامل تمام کدهای اصلی ربات                                                                     |
| `bot/handlers/`                  | هندلرهای تلگرام برای دریافت پیام‌ها و پردازش دستورات مثل `/start`، پیام‌های متنی، و اینلاین   |
| `bot/handlers/start.py`          | هندلر دستور شروع ربات و پیام‌های اولیه                                                        |
| `bot/handlers/other.py`          | هندلر سایر پیام‌ها و منطق مرتبط با پیام‌های دریافتی                                           |
| `bot/services/`                  | منطق اصلی برنامه شامل اتصال به دیتابیس، کش، API تلگرام و مدل AI                               |
| `bot/services/db_mysql.py`       | مدیریت اتصال و اجرای کوئری‌ها در دیتابیس MySQL با پشتیبانی از connection pooling              |
| `bot/services/db_sqlite.py`      | مدیریت اتصال و اجرای کوئری‌ها در دیتابیس SQLite با مدیریت Lock برای جلوگیری از تداخل          |
| `bot/services/db_service.py`     | لایه انتزاعی که بر اساس تنظیمات برنامه دیتابیس مناسب را انتخاب و فراخوانی می‌کند              |
| `bot/services/db_locks.py`       | تعریف Lock ها و ابزارهای همزمانی برای کنترل دسترسی همزمان و جلوگیری از مشکلات concurrency     |
| `bot/services/cache_service.py`  | مدیریت کش داخلی یا خارجی (اختیاری)، برای بهبود عملکرد و کاهش بار دیتابیس                      |
| `bot/services/telegram_api.py`   | کدهای مرتبط با فراخوانی و مدیریت API تلگرام                                                   |
| `bot/services/ai_model/`         | پوشه مربوط به مدل هوش مصنوعی و منطق پردازش هوشمند                                             |
| `bot/services/ai_model/model.py` | کد بارگذاری و تعامل با مدل AI (مثل مدل جنمای)، ارسال پرامپت و دریافت پاسخ                     |
| `bot/services/ai_model/utils.py` | توابع کمکی مربوط به پیش‌پردازش پرامپت‌ها و پردازش پاسخ‌های مدل AI                             |
| `bot/models/`                    | تعریف مدل‌های داده‌ای برنامه مثل کلاس‌های User، Session و غیره                                |
| `bot/models/user.py`             | مدل داده کاربر، ذخیره‌سازی اطلاعات و وضعیت کاربر                                              |
| `bot/utils/`                     | توابع و ابزارهای کمکی عمومی مانند لاگر، اعتبارسنجی، قالب‌بندی تاریخ و ...                     |
| `bot/utils/logger.py`            | مدیریت ثبت و گزارش خطاها و اطلاعات لاگ                                                        |
| `bot/main.py`                    | نقطه شروع ربات، راه‌اندازی و ثبت هندلرها، اتصال به تلگرام و شروع دریافت پیام‌ها               |
| `config/`                        | تنظیمات کلی برنامه، بارگذاری متغیرهای محیطی و پیکربندی دیتابیس و سرویس‌ها                     |
| `config/settings.py`             | بارگذاری تنظیمات از فایل `.env` و ذخیره پارامترهای مهم مثل توکن تلگرام، دیتابیس و کلید API AI |
| `.env`                           | فایل متغیرهای محیطی حاوی اطلاعات محرمانه مانند توکن تلگرام، اطلاعات دیتابیس و کلید API مدل AI |
| `.env.example`                   | نمونه فایل `.env` بدون اطلاعات محرمانه برای اشتراک‌گذاری و استفاده در محیط‌های توسعه          |
| `requirements.txt`               | لیست کتابخانه‌ها و پکیج‌های پایتون مورد نیاز برای اجرای پروژه                                 |
| `README.md`                      | مستندات پروژه، توضیح نحوه نصب، راه‌اندازی و توسعه ربات                                        |
| `.gitignore`                     | فایل تعیین فایل‌ها و پوشه‌هایی که نباید در گیت ثبت شوند                                       |

